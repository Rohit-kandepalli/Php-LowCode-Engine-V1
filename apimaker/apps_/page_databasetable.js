const page_databasetable = { data(){ return { "html": "", "dbtype": "", "table": "", "engine": "", "tables": [], "auth": "none", "edit": false, "add": false, "delete": false, "search": false, "theme": "", } }, props: ['tag', 'vars', 'refname'], mounted: function(){ this.init(); }, watch: { v: { handler: function(){ this.$emit("updated"); }, deep:true } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, init: function(){ this.html = this.tag.outerHTML; }, s2_kkkcabllac: function( c ){ if( c == "s2_tes_amehcs" ){ this.$emit("updated"); var k = Object.keys(this.v['data']['schema']['fields']['v']); var v = []; for(var i=0;i<k.length;i++){ v.push({ "f": { "t": "T", "v": k[i] }, "v": { "t": "T", "v": "" }, }); } this.v['data']['set']['v'] = v;  }else{ console.log("Callback: " + c + " not defined!"); } }, dbtableselect: function(){ this.maketag(); axios.post( this.$root.rootpath + "things/", { "action": "context_load_things", "app_id": this.$root.app_id, "thing": (this.dbtype=="internal-table"?"page_edit_tables_internal":(this.dbtype=="external-table"?"page_edit_tables_external":"none")), }).then(response=>{ this.tables = response.data['things']; }).catch(error=>{ }); }, tableselect: function(){ var x = this.table.split(":"); this.engine = x[1]; this.maketag(); }, maketag: function(){ this.html = `<div data-app="DatabaseTable"\n\tdata-db-type="` + this.dbtype + `"\n\t data-table-id="`+this.table+`"\n\t data-engine="`+this.engine+`"\n\t >Database Table APP</div>`; } }, template: `<div style="" > <div>Database</div> <div><select v-model="dbtype" class="form-select form-select-sm" v-on:change="dbtableselect" > <option value="internal-table" >Internal Table</option> <option value="external-table" >External Table</option> <option value="elastic-table" >Elastic Table</option> </select> <div>Table</div> <div><select v-model="table" class="form-select form-select-sm" v-on:change="tableselect" > <option v-for="td,ti in tables" v-bind:value="td['i']" >{{ td['l'] }}</option> </select></div> <pre>{{ html }}</pre> </div>` };